/*
Deployment script for BT3101

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "BT3101"
:setvar DefaultFilePrefix "BT3101"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL16.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL16.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Creating Table [dbo].[Account]...';


GO
CREATE TABLE [dbo].[Account] (
    [Id]           INT             IDENTITY (1, 1) NOT NULL,
    [ClientId]     INT             NOT NULL,
    [Balance]      DECIMAL (15, 2) NULL,
    [ModifiedDate] DATETIME        NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Client]...';


GO
CREATE TABLE [dbo].[Client] (
    [Id]           INT           IDENTITY (1, 1) NOT NULL,
    [Firstname]    VARCHAR (30)  NULL,
    [Lastname]     VARCHAR (30)  NULL,
    [MobileNumber] NVARCHAR (30) NULL,
    [Gender]       VARCHAR (30)  NULL,
    [Address]      VARCHAR (50)  NULL,
    [Birthdate]    DATETIME      NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Product]...';


GO
CREATE TABLE [dbo].[Product] (
    [Id] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[User]...';


GO
CREATE TABLE [dbo].[User] (
    [Id]       INT           IDENTITY (1, 1) NOT NULL,
    [Username] NVARCHAR (30) NULL,
    [Password] NVARCHAR (30) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[Account]...';


GO
ALTER TABLE [dbo].[Account]
    ADD DEFAULT 0.00 FOR [Balance];


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[Account]...';


GO
ALTER TABLE [dbo].[Account] WITH NOCHECK
    ADD FOREIGN KEY ([ClientId]) REFERENCES [dbo].[Client] ([Id]);


GO
PRINT N'Creating Procedure [dbo].[CreateClientAccount]...';


GO
CREATE PROCEDURE [dbo].[CreateClientAccount]
    @Firstname VARCHAR(30) = NULL,  
    @Lastname VARCHAR(30) = NULL,  
    @MobileNumber NVARCHAR(30) = NULL,  
    @Gender VARCHAR(30) = NULL,    
    @Address VARCHAR(50) = NULL,   
    @Birthdate DATETIME = NULL,    
    @Balance DECIMAL(15, 2) = NULL
AS
BEGIN
    SET NOCOUNT ON;

        INSERT INTO [dbo].[Client] (Firstname, Lastname, MobileNumber, Gender, Address, Birthdate)
        VALUES (@Firstname, @Lastname, @MobileNumber, @Gender, @Address, @Birthdate);

        DECLARE @NewClientId INT = SCOPE_IDENTITY();

        INSERT INTO [dbo].[Account] (ClientId, Balance, ModifiedDate)
        VALUES (@NewClientId, ISNULL(@Balance, 0.00), GETDATE());
END;
GO
PRINT N'Creating Procedure [dbo].[DeleteClientAccount]...';


GO
CREATE PROCEDURE [dbo].[DeleteClientAccount]
    @ClientId INT = NULL
AS
BEGIN
    SET NOCOUNT ON;

        DELETE FROM [dbo].[Account]
        WHERE ClientId = @ClientId;

        DELETE FROM [dbo].[Client]
        WHERE Id = @ClientId;
END;
GO
PRINT N'Creating Procedure [dbo].[GetClientAccountDetails]...';


GO
CREATE PROCEDURE dbo.GetClientAccountDetails
AS
BEGIN
    SELECT 
        c.Id AS ClientId,
        c.Firstname,
        c.Lastname,
        c.MobileNumber,
        c.Gender,
        c.Address,
        c.Birthdate,
        a.Id AS AccountId,
        a.Balance,
        a.ModifiedDate
    FROM 
        [dbo].[Client] AS c
    INNER JOIN 
        [dbo].[Account] AS a ON c.Id = a.ClientId
    ORDER BY 
        c.Id;
END;
GO
PRINT N'Creating Procedure [dbo].[GetClientAccountDetailsById]...';


GO
CREATE PROCEDURE dbo.GetClientAccountDetailsById
    @ClientId INT
AS
BEGIN
    SELECT 
        c.Id AS ClientId,
        c.Firstname,
        c.Lastname,
        c.MobileNumber,
        c.Gender,
        c.Address,
        c.Birthdate,
        a.Id AS AccountId,
        a.Balance,
        a.ModifiedDate
    FROM 
        [dbo].[Client] c
    INNER JOIN 
        [dbo].[Account] a ON c.Id = a.ClientId
    WHERE 
        (c.Id = @ClientId) 
END;
GO
PRINT N'Creating Procedure [dbo].[UpdateClientAccount]...';


GO
CREATE PROCEDURE [dbo].[UpdateClientAccount]
    @ClientId INT = NULL,      
    @Firstname VARCHAR(30) = NULL,  
    @Lastname VARCHAR(30) = NULL,   
    @MobileNumber NVARCHAR(30) = NULL, 
    @Gender VARCHAR(30) = NULL,    
    @Address VARCHAR(50) = NULL,   
    @Birthdate DATETIME = NULL,    
    @Balance DECIMAL(15, 2) = NULL
AS
BEGIN
    SET NOCOUNT ON;
        UPDATE [dbo].[Client]
        SET Firstname = @Firstname,
            Lastname = @Lastname,
            MobileNumber = @MobileNumber,
            Gender = @Gender,
            Address = @Address,
            Birthdate = @Birthdate
        WHERE Id = @ClientId;

        UPDATE [dbo].[Account]
        SET Balance = ISNULL(@Balance, 0.00),
            ModifiedDate = GETDATE()
        WHERE ClientId = @ClientId;
    
END;
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.
--------------------------------------------------------------------------------------
*/


-- Insert records into User table
INSERT INTO [dbo].[User]
(
[Username], 
[Password])
VALUES('admin','admin')


-- Insert records into Client table
INSERT INTO [dbo].[Client] (Firstname, Lastname, MobileNumber, Gender, Address, Birthdate)
VALUES 
('John', 'Doe', '123-456-7890', 'Male', '123 Main St, Springfield', '1985-03-25'),
('Jane', 'Smith', '234-567-8901', 'Female', '456 Elm St, Shelbyville', '1990-07-12'),
('Michael', 'Johnson', '345-678-9012', 'Male', '789 Oak St, Capital City', '1978-11-05'),
('Emily', 'Davis', '456-789-0123', 'Female', '101 Pine St, Ogdenville', '2000-01-15'),
('David', 'Wilson', '567-890-1234', 'Male', '202 Birch St, North Haverbrook', '1995-06-20'),
('Sarah', 'Brown', '678-901-2345', 'Female', '303 Maple St, Springfield', '1982-02-10'),
('Robert', 'Taylor', '789-012-3456', 'Male', '404 Cedar St, Shelbyville', '1988-09-15'),
('Linda', 'Martinez', '890-123-4567', 'Female', '505 Walnut St, Capital City', '1992-04-30'),
('James', 'Anderson', '901-234-5678', 'Male', '606 Ash St, Ogdenville', '1980-12-01'),
('Patricia', 'Thomas', '012-345-6789', 'Female', '707 Fir St, North Haverbrook', '1975-07-18');

-- Insert records into Account table
INSERT INTO [dbo].[Account] (ClientId, Balance, ModifiedDate)
VALUES 
(1, 1000.00, GETDATE()),
(2, 2500.50, GETDATE()),
(3, 500.75, GETDATE()),
(4, 3000.00, GETDATE()),
(5, 750.25, GETDATE()),
(6, 1200.00, GETDATE()),
(7, 2000.00, GETDATE()),
(8, 1800.75, GETDATE()),
(9, 150.00, GETDATE()),
(10, 5000.00, GETDATE());


GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.Account'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO
